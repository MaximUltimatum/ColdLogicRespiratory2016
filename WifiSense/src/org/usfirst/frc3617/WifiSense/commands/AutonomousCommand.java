// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3617.WifiSense.commands;

import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc3617.WifiSense.Robot;
import org.usfirst.frc3617.WifiSense.RobotMap;

/**
 *
 */
public class AutonomousCommand extends Command {

 final RobotDrive myRobot = Robot.myRobot;
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public AutonomousCommand() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {

    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
       	//start mode 1
    	if(Robot.autoMode == 1){
    		myRobot.drive(-0.5, 0.0); 	// drive forwards half speed
    		Timer.delay(4);
    		myRobot.drive(0.0, 0.0); 	// stop robot
    	}
    	//end mode 1
    	//start mode 2
    	if(Robot.autoMode == 2){
        	
    			myRobot.drive(-0.5, 0.0); 	// drive forwards half speed		 
                   Timer.delay(3);
        			myRobot.drive(0.5, 0.0); 	// drive backwards half speed	
    			  Timer.delay(2);
    			  myRobot.drive(0.0, 0.0);
    	}	// stop robot
    		  
        	
    	//end mode 2
    	//start mode 3
    	if(Robot.autoMode == 3){
    		myRobot.drive(-0.5, 0.0); 	// drive forwards half speed
    		Timer.delay(2);
    		RobotMap.cow.set(0.5);
    		Timer.delay(2);
    		myRobot.drive(-0.5, 0.0); 	// drive forwards half speed
    			RobotMap.cow.set(0);
    		Timer.delay(2);
    		myRobot.drive(0.0, 0.0); 	// stop robot
    	  
    	}
    	//end mode 3
    	//start mode 4
    	if(Robot.autoMode == 4){
    	
    		myRobot.drive(-0.5, 0.0); 	// drive forwards half speed
            Timer.delay(2);
    			myRobot.drive(-0.5, 1.0);
    		Timer.delay(2);
    			myRobot.drive(-0.5, 0.0); 	// drive forwards half speed
    		Timer.delay(2);   		
    		myRobot.drive(0.0, 0.0); 	// stop robot
    	
    	}
    	//end mode 4
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	myRobot.drive(0.0, 0.0);
    	RobotMap.cow.set(0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
